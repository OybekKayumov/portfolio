{"mappings":";AAgDA,MAAMA,UAAYC,SAASC,cAAc,cACnCC,MAAQF,SAASC,cAAc,UAC/BE,QAAUH,SAASC,cAAc,QAGvCG,MAAM,6CAA8C,CAClDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBC,MAAO,eACPH,KAAM,4BACNI,OAAQ,MAEVC,QAAS,CACP,eAAgB,sBAGfC,MAAMC,GAAQA,EAAIC,SAClBF,MAAMG,IACJC,QAAQC,IAAI,SAAUF,GAEtBhB,UAAUmB,UAAS,qDAELH,EAAKN,kCACJM,EAAKT,kCACJS,EAAKL,gCACTK,EAAKI","sources":["src/fetch/fetchPOST.js"],"sourcesContent":["// 1 simple Fetch\r\n// fetch request is really simple\r\n// const url = 'https://us-central1-js-capstone-backend.cloudfunctions.net/api/'\r\n\r\n// const getFetch = document.querySelector('.getFetch');\r\n\r\n// const url = 'https://jsonplaceholder.typicode.com/todos/1'\r\n\r\n// fetch (url)\r\n//   .then(response => response.json())\r\n//   // .then(data => console.log('data: ', data))\r\n//   .then(data => {\r\n    \r\n//     console.log('data: ', data)\r\n//     getFetch.innerHTML = `\r\n//            <p>Name: ${data.title}</p>\r\n//            <p>ID: ${data.id}</p>\r\n//            <p>Completed: ${data.completed}</p>    \r\n//        `\r\n//   })\r\n\r\n\r\n\r\n// 2 full Fetch\r\n\r\n// async function postData(url= '', data ={} ) {\r\n  \r\n  //! Default options are marked with *\r\n  // const response = await fetch(url, {\r\n    // method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n    // mode: 'cors', // no-cors, *cors, same-origin\r\n    // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n    // credentials: 'same-origin', // include, *same-origin, omit\r\n    // headers: {\r\n      // 'Content-type': 'application/json'\r\n      //'Content-type': 'application/x-www-form-urlencoded'\r\n    // },\r\n    // redirect: 'follow', // manual, *follow, error\r\n    // referrerPolicy: 'no-referrer', // no-refferer, *no-refferer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url \r\n    // body: JSON.stringify(data) // body data type must match \"Content-type\" header\r\n  // })\r\n\r\n  // return response.json(); //parses JSON response into native JavaScript objects\r\n\r\n// }\r\n\r\n\r\n//todo  3 : POST works.\r\nconst postFetch = document.querySelector('.postFetch');\r\nconst input = document.querySelector('.input');\r\nconst sendBtn = document.querySelector('.btn');\r\n\r\n\r\nfetch('https://jsonplaceholder.typicode.com/posts', {\r\n  method: 'POST',\r\n  body: JSON.stringify({\r\n    title: 'Cline Walter',\r\n    body: '48, Street, City, Country',\r\n    userId: 789,\r\n  }),\r\n  headers: {\r\n    'Content-type': 'application/json'\r\n  },\r\n  })\r\n    .then((res) => res.json()) //? \r\n    .then((data) => {\r\n       console.log('data: ', data)\r\n    \r\n       postFetch.innerHTML = `\r\n          <p>Post data:</p>\r\n          <p>Name: ${data.title}</p>\r\n          <p>About: ${data.body}</p>\r\n          <p>userID: ${data.userId}</p>\r\n          <p>ID: ${data.id}</p>\r\n\r\n   `\r\n  });\r\n\r\n// sendBtn.addEventListener ('click', postData)\r\n\r\n  //todo 4  PUT\r\n  \r\n  // const putFetch = document.querySelector('.putFetch');\r\n\r\n  // fetch('https://jsonplaceholder.typicode.com/posts/2', {\r\n  //   method: 'PUT',\r\n  //   body: JSON.stringify({\r\n  //     id: 1,\r\n  //     title: 'Bob Houston',\r\n  //     body: 'lion',\r\n  //     userId: 567,\r\n  //   }),\r\n  //   headers: {\r\n  //     'Content-type': 'application/json; charset=UTF-8',\r\n  //   },\r\n  // })\r\n  //   .then(res => res.json())\r\n  //   .then(data => {\r\n  //     console.log('data: ', data)\r\n    \r\n  //     putFetch.innerHTML = `\r\n  //        <p>Put data:</p>\r\n  //        <p>Name: ${data.title}</p>\r\n  //        <p>About: ${data.body}</p>\r\n  //        <p>userID: ${data.userId}</p>\r\n  //        <p>ID: ${data.id}</p>\r\n\r\n  // `\r\n  //   })\r\n\r\n//todo 5  with function \r\n\r\n\r\n\r\n\r\n  "],"names":["postFetch","document","querySelector","input","sendBtn","fetch","method","body","JSON","stringify","title","userId","headers","then","res","json","data","console","log","innerHTML","id"],"version":3,"file":"fetchPOST.8864cd09.js.map"}