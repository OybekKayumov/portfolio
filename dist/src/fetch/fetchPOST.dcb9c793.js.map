{"mappings":"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","sources":["src/fetch/fetchPOST.js"],"sourcesContent":["// 1 simple Fetch\r\n// fetch request is really simple\r\n// const url = 'https://us-central1-js-capstone-backend.cloudfunctions.net/api/'\r\n\r\n// const getFetch = document.querySelector('.getFetch');\r\n\r\n// const url = 'https://jsonplaceholder.typicode.com/todos/1'\r\n\r\n// fetch (url)\r\n//   .then(response => response.json())\r\n//   // .then(data => console.log('data: ', data))\r\n//   .then(data => {\r\n    \r\n//     console.log('data: ', data)\r\n//     getFetch.innerHTML = `\r\n//            <p>Name: ${data.title}</p>\r\n//            <p>ID: ${data.id}</p>\r\n//            <p>Completed: ${data.completed}</p>    \r\n//        `\r\n//   })\r\n\r\n\r\n\r\n// 2 full Fetch\r\n\r\n// async function postData(url= '', data ={} ) {\r\n  \r\n  //! Default options are marked with *\r\n  // const response = await fetch(url, {\r\n    // method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n    // mode: 'cors', // no-cors, *cors, same-origin\r\n    // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n    // credentials: 'same-origin', // include, *same-origin, omit\r\n    // headers: {\r\n      // 'Content-type': 'application/json'\r\n      //'Content-type': 'application/x-www-form-urlencoded'\r\n    // },\r\n    // redirect: 'follow', // manual, *follow, error\r\n    // referrerPolicy: 'no-referrer', // no-refferer, *no-refferer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url \r\n    // body: JSON.stringify(data) // body data type must match \"Content-type\" header\r\n  // })\r\n\r\n  // return response.json(); //parses JSON response into native JavaScript objects\r\n\r\n// }\r\n\r\n\r\n//todo  3 : POST works.\r\nconst postFetch = document.querySelector('.postFetch');\r\nconst input = document.querySelector('.input');\r\nconst sendBtn = document.querySelector('.btn');\r\n\r\n\r\nfetch('https://jsonplaceholder.typicode.com/posts', {\r\n  method: 'POST',\r\n  body: JSON.stringify({\r\n    title: 'Cline Walter',\r\n    body: '48, Street, City, Country',\r\n    userId: 789,\r\n  }),\r\n  headers: {\r\n    'Content-type': 'application/json'\r\n  },\r\n  })\r\n    .then((res) => res.json()) //? \r\n    .then((data) => {\r\n       console.log('data: ', data)\r\n    \r\n       postFetch.innerHTML = `\r\n          <p>Post data:</p>\r\n          <p>Name: ${data.title}</p>\r\n          <p>About: ${data.body}</p>\r\n          <p>userID: ${data.userId}</p>\r\n          <p>ID: ${data.id}</p>\r\n\r\n   `\r\n  });\r\n\r\n// sendBtn.addEventListener ('click', postData)\r\n\r\n  //todo 4  PUT\r\n  \r\n  // const putFetch = document.querySelector('.putFetch');\r\n\r\n  // fetch('https://jsonplaceholder.typicode.com/posts/2', {\r\n  //   method: 'PUT',\r\n  //   body: JSON.stringify({\r\n  //     id: 1,\r\n  //     title: 'Bob Houston',\r\n  //     body: 'lion',\r\n  //     userId: 567,\r\n  //   }),\r\n  //   headers: {\r\n  //     'Content-type': 'application/json; charset=UTF-8',\r\n  //   },\r\n  // })\r\n  //   .then(res => res.json())\r\n  //   .then(data => {\r\n  //     console.log('data: ', data)\r\n    \r\n  //     putFetch.innerHTML = `\r\n  //        <p>Put data:</p>\r\n  //        <p>Name: ${data.title}</p>\r\n  //        <p>About: ${data.body}</p>\r\n  //        <p>userID: ${data.userId}</p>\r\n  //        <p>ID: ${data.id}</p>\r\n\r\n  // `\r\n  //   })\r\n\r\n//todo 5  with function \r\n\r\n\r\n\r\n\r\n  "],"names":[],"version":3,"file":"fetchPOST.dcb9c793.js.map","sourceRoot":"/__parcel_source_root/"}