{"mappings":"AAAA,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAU;AACpD,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAM;AAC5C,EAAe,AAAf,aAAe;AACf,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAO;AAE/C,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC;AACjB,EAA8B,AAA9B,4BAA8B;AAC9B,EAAE,EAAE,YAAY,CAAC,OAAO,CAAC,CAAM,QAAG,CAAC;IACjC,EAAyC,AAAzC,uCAAyC;IACzC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,CAAM;IACjD,EAAwC,AAAxC,sCAAwC;IACxC,cAAc;AAChB,CAAC,MACC,QAAQ,GAAG,CAAC,CAAC;AAGf,MAAM,CAAC,gBAAgB,CAAC,CAAO,YAAQ,CAAC;IACtC,EAA0C,AAA1C,wCAA0C;IAC1C,EAAE,GAAG,UAAU,CAAC,KAAK,EACnB,EAA4B,AAA5B,0BAA4B;IAC5B,MAAM;IAER,EAAuB,AAAvB,qBAAuB;IACvB,EAAoC,AAApC,kCAAoC;IACpC,EAAoB,AAApB,kBAAoB;IACpB,GAAG,CAAC,OAAO,GAAG,CAAC;QACb,IAAI,EAAE,UAAU,CAAC,KAAK;QACtB,OAAO,EAAE,KAAK;QACd,SAAS,EAAE,KAAK;QAChB,EAAE,EAAE,CAAC;IACP,CAAC;IAED,QAAQ,CAAC,IAAI,CAAC,OAAO;IAErB,EAAoE,AAApE,kEAAoE;IACpE,EAA6C,AAA7C,2CAA6C;IAC7C,EAA8C,AAA9C,4CAA8C;IAC9C,EAA8C,AAA9C,4CAA8C;IAC9C,cAAc;IACd,EAA2B,AAA3B,yBAA2B;IAC3B,YAAY,CAAC,OAAO,CAAC,CAAM,OAAE,IAAI,CAAC,SAAS,CAAC,QAAQ;IACpD,UAAU,CAAC,KAAK,GAAG,CAAE;AACvB,CAAC;SAEQ,cAAc,GAAG,CAAC;IACzB,GAAG,CAAC,aAAa,GAAG,CAAE;IACtB,EAAE,EAAE,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE,QAAQ,CAAC,SAAS,GAAG,CAAE;IAClD,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,GAAK,CAAC;QACjC,EAAqC,AAArC,mCAAqC;QACrC,EAA4D,AAA5D,0DAA4D;QAC5D,EAAiD,AAAjD,+CAAiD;QAGjD,EAAsB,AAAtB,oBAAsB;QACtB,EAAuB,AAAvB,qBAAuB;QACvB,EAA8B,AAA9B,4BAA8B;QAC9B,EAAwD,AAAxD,sDAAwD;QACxD,aAAa,KAAK;;0CAEoB,EAAE,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,GAAG,CAAS,WAAG,CAAE,EAAC;2BACzD,EAAE,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,GAAG,CAAW,aAAG,CAAE,EAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC;;IAE1F;QAEA,QAAQ,CAAC,SAAS,GAAG,aAAa;IACpC,CAAC;AACH,CAAC;AAED,EAA2C,AAA3C,yCAA2C;AAC3C,EAAmC,AAAnC,iCAAmC;AACnC,EAAiC,AAAjC,+BAAiC;AACjC,EAAiB,AAAjB,eAAiB;AACjB,QAAQ,CAAC,gBAAgB,CAAC,CAAQ,UAAG,KAAK,GAAK,CAAC;IAC9C,EAAsC,AAAtC,oCAAsC;IACtC,EAA8B,AAA9B,4BAA8B;IAC9B,EAAoC,AAApC,kCAAoC;IACpC,EAAgD,AAAhD,8CAAgD;IAEhD,GAAG,CAAC,OAAO,GAAI,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAI;IAC7C,GAAG,CAAC,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAO,SAAG,OAAO,GAAG,CAAG;IAC7D,GAAG,CAAC,UAAU,GAAG,QAAQ,CAAC,SAAS;IAEnC,EAAc,AAAd,YAAc;IACd,EAAuC,AAAvC,qCAAuC;IACvC,EAA8B,AAA9B,4BAA8B;IAC9B,EAA2C,AAA3C,yCAA2C;IAE3C,QAAQ,CAAC,OAAO,EAAE,IAAI,GAAK,CAAC;QAC1B,EAAE,EAAE,IAAI,CAAC,IAAI,KAAK,UAAU,EAAE,CAAC;YAC7B,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO;YAE5B,YAAY,CAAC,OAAO,CAAC,CAAM,OAAE,IAAI,CAAC,SAAS,CAAC,QAAQ;QACtD,CAAC;IACH,CAAC;AACH,CAAC;AAED,EAAiB,AAAjB,eAAiB;AACjB,QAAQ,CAAC,gBAAgB,CAAC,CAAa,eAAG,KAAK,GAAK,CAAC;IACnD,KAAK,CAAC,cAAc;IACpB,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,GAAK,CAAC;QACjC,EAAE,EAAC,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;YACxC,EAA6C,AAA7C,2CAA6C;YAC7C,EAAE,EAAE,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,EAChC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;iBAExB,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS;YAGlC,cAAc;YACd,YAAY,CAAC,OAAO,CAAC,CAAM,OAAE,IAAI,CAAC,SAAS,CAAC,QAAQ;QACtD,CAAC;IACH,CAAC;AACH,CAAC","sources":["src/todo.js"],"sourcesContent":["const addMessage = document.querySelector('.message');\r\nconst addBtn = document.querySelector('.add');\r\n//list of tasks\r\nconst todoTask = document.querySelector('.todo');\r\n\r\nlet todoList = [];\r\n// check localStorage for data\r\nif (localStorage.getItem('todo')) {\r\n  // if in localStorage we have some data, \r\n  todoList = JSON.parse(localStorage.getItem('todo'));\r\n  // render data from LocalStorage to HTML\r\n  renderMessages();\r\n} else {\r\n  todoList = [];\r\n}\r\n\r\naddBtn.addEventListener('click', () => {\r\n  // if input is empty, we cannot add a task\r\n  if (!addMessage.value) {\r\n    // alert(\"Enter a new task\")\r\n    return;\r\n  }  \r\n  // every task to OBJECT\r\n  // every OBJECT to Array => todoList\r\n  // create new array \r\n  let newTodo = {\r\n    todo: addMessage.value,\r\n    checked: false,\r\n    important: false,\r\n    id: 0\r\n  }\r\n\r\n  todoList.push(newTodo);\r\n  \r\n  // console.log('value from input \"addMessage\": ', addMessage.value);\r\n  // console.log('newTodo Object\": ', newTodo);\r\n  // console.log('TodoList Array\": ', todoList);\r\n  // call every time when we click on Add button\r\n  renderMessages()\r\n  // localStorage gets string\r\n  localStorage.setItem('todo', JSON.stringify(todoList));\r\n  addMessage.value = '';\r\n})\r\n\r\nfunction renderMessages() { \r\n  let renderMessage = '';\r\n  if (todoList.length === 0) todoTask.innerHTML = '';\r\n  todoList.forEach((item, index) => {\r\n    // console.log('render items', item);\r\n    // const renderMessage = `Our task is: ${addMessage.value}`;\r\n    // console.log('renderMessage: ', renderMessage);\r\n    \r\n\r\n    // checked task or not\r\n    // item.checked ? 1 : 2\r\n    // if true do 1, if false do 2\r\n    // if checked is true we add \"checked, if false \"\" empty\r\n    renderMessage += `\r\n        <li>\r\n          <input type=\"checkbox\" id=\"item_${index}\" ${item.checked ? 'checked' : ''}>\r\n          <label for=\"item_${index}\" class=\"${item.important ? 'important' : ''}\">${item.todo}</label>\r\n        </li>    \r\n    `;\r\n    \r\n    todoTask.innerHTML = renderMessage; \r\n  })\r\n}\r\n\r\n// see and update for task status 'checked'\r\n// if checked, save to LocalStorage\r\n// we can find 'checked' by input\r\n// our task list \r\ntodoTask.addEventListener('change', (event) => {\r\n  // see on consol which task we pressed\r\n  // console.log(event.target); \r\n  // take attribute ID for this target\r\n  // console.log(event.target.getAttribute('id'));\r\n  \r\n  let idInput  = event.target.getAttribute('id');\r\n  let forLabel = todoTask.querySelector('[for=' + idInput + ']');\r\n  let valueLabel = forLabel.innerHTML;\r\n\r\n  // item number\r\n  // console.log('forlabel: ', forLabel);\r\n  // value label = text (task 1)\r\n  // console.log('valuelabel: ', valueLabel);\r\n\r\n  todoList.forEach((item) => {\r\n    if (item.todo === valueLabel) {\r\n      item.checked = !item.checked;\r\n\r\n      localStorage.setItem('todo', JSON.stringify(todoList));\r\n    }\r\n  })\r\n})\r\n\r\n// important task\r\ntodoTask.addEventListener('contextmenu', (event) => {\r\n  event.preventDefault();\r\n  todoList.forEach((item, index) => {\r\n    if(item.todo === event.target.innerHTML) {\r\n      // delete task by \"right click mouse + CTRL\" \r\n      if (event.ctrlKey || event.metaKey) {\r\n        todoList.splice(index, 1)\r\n      } else {\r\n        item.important = !item.important;\r\n      }\r\n\r\n      renderMessages();\r\n      localStorage.setItem('todo', JSON.stringify(todoList));\r\n    }\r\n  })\r\n});\r\n"],"names":[],"version":3,"file":"todo.099c8cbf.js.map","sourceRoot":"/__parcel_source_root/"}