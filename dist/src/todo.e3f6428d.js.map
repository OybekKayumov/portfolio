{"mappings":"AAAA,MAAMA,WAAaC,SAASC,cAAc,YACpCC,OAASF,SAASC,cAAc,QAEhCE,SAAWH,SAASC,cAAc,SAExC,IAAIG,SAAW,YAuCNC,iBACP,IAAIC,EAAgB,GACI,IAApBF,SAASG,SAAcJ,SAASK,UAAY,IAChDJ,SAASK,SAAO,CAAEC,EAAMC,KAUtBL,GAAa,6DAE2BK,MAAUD,EAAKE,QAAU,UAAY,mCACpDD,aAAiBD,EAAKG,UAAY,YAAc,OAAOH,EAAKI,wCAIrFX,SAASK,UAAYF,KAzDrBS,aAAaC,QAAQ,SAEvBZ,SAAWa,KAAKC,MAAMH,aAAaC,QAAQ,SAE3CX,kBAEAD,SAAW,GAGbF,OAAOiB,iBAAiB,SAAO,KAE7B,IAAKpB,WAAWqB,MAEd,OAKF,IAAIC,EAAU,CACZP,KAAMf,WAAWqB,MACjBR,SAAS,EACTC,WAAW,EACXS,GAAI,GAGNlB,SAASmB,KAAKF,GAMdhB,iBAEAU,aAAaS,QAAQ,OAAQP,KAAKQ,UAAUrB,WAC5CL,WAAWqB,MAAQ,MA+BrBjB,SAASgB,iBAAiB,UAAWO,IAMnC,IAAIC,EAAWD,EAAME,OAAOC,aAAa,MAErCC,EADW3B,SAASF,cAAc,QAAU0B,EAAU,KAChCnB,UAO1BJ,SAASK,SAASC,IACZA,EAAKI,OAASgB,IAChBpB,EAAKE,SAAWF,EAAKE,QAErBG,aAAaS,QAAQ,OAAQP,KAAKQ,UAAUrB,kBAMlDD,SAASgB,iBAAiB,eAAgBO,IACxCA,EAAMK,iBACN3B,SAASK,SAAO,CAAEC,EAAMC,KACnBD,EAAKI,OAASY,EAAME,OAAOpB,YAExBkB,EAAMM,SAAWN,EAAMO,QACzB7B,SAAS8B,OAAOvB,EAAO,GAEvBD,EAAKG,WAAaH,EAAKG,UAGzBR,iBACAU,aAAaS,QAAQ,OAAQP,KAAKQ,UAAUrB","sources":["src/todo.js"],"sourcesContent":["const addMessage = document.querySelector('.message');\r\nconst addBtn = document.querySelector('.add');\r\n//list of tasks\r\nconst todoTask = document.querySelector('.todo');\r\n\r\nlet todoList = [];\r\n// check localStorage for data\r\nif (localStorage.getItem('todo')) {\r\n  // if in localStorage we have some data, \r\n  todoList = JSON.parse(localStorage.getItem('todo'));\r\n  // render data from LocalStorage to HTML\r\n  renderMessages();\r\n} else {\r\n  todoList = [];\r\n}\r\n\r\naddBtn.addEventListener('click', () => {\r\n  // if input is empty, we cannot add a task\r\n  if (!addMessage.value) {\r\n    // alert(\"Enter a new task\")\r\n    return;\r\n  }  \r\n  // every task to OBJECT\r\n  // every OBJECT to Array => todoList\r\n  // create new array \r\n  let newTodo = {\r\n    todo: addMessage.value,\r\n    checked: false,\r\n    important: false,\r\n    id: 0\r\n  }\r\n\r\n  todoList.push(newTodo);\r\n  \r\n  // console.log('value from input \"addMessage\": ', addMessage.value);\r\n  // console.log('newTodo Object\": ', newTodo);\r\n  // console.log('TodoList Array\": ', todoList);\r\n  // call every time when we click on Add button\r\n  renderMessages()\r\n  // localStorage gets string\r\n  localStorage.setItem('todo', JSON.stringify(todoList));\r\n  addMessage.value = '';\r\n})\r\n\r\nfunction renderMessages() { \r\n  let renderMessage = '';\r\n  if (todoList.length === 0) todoTask.innerHTML = '';\r\n  todoList.forEach((item, index) => {\r\n    // console.log('render items', item);\r\n    // const renderMessage = `Our task is: ${addMessage.value}`;\r\n    // console.log('renderMessage: ', renderMessage);\r\n    \r\n\r\n    // checked task or not\r\n    // item.checked ? 1 : 2\r\n    // if true do 1, if false do 2\r\n    // if checked is true we add \"checked, if false \"\" empty\r\n    renderMessage += `\r\n        <li>\r\n          <input type=\"checkbox\" id=\"item_${index}\" ${item.checked ? 'checked' : ''}>\r\n          <label for=\"item_${index}\" class=\"${item.important ? 'important' : ''}\">${item.todo}</label>\r\n        </li>    \r\n    `;\r\n    \r\n    todoTask.innerHTML = renderMessage; \r\n  })\r\n}\r\n\r\n// see and update for task status 'checked'\r\n// if checked, save to LocalStorage\r\n// we can find 'checked' by input\r\n// our task list \r\ntodoTask.addEventListener('change', (event) => {\r\n  // see on consol which task we pressed\r\n  // console.log(event.target); \r\n  // take attribute ID for this target\r\n  // console.log(event.target.getAttribute('id'));\r\n  \r\n  let idInput  = event.target.getAttribute('id');\r\n  let forLabel = todoTask.querySelector('[for=' + idInput + ']');\r\n  let valueLabel = forLabel.innerHTML;\r\n\r\n  // item number\r\n  // console.log('forlabel: ', forLabel);\r\n  // value label = text (task 1)\r\n  // console.log('valuelabel: ', valueLabel);\r\n\r\n  todoList.forEach((item) => {\r\n    if (item.todo === valueLabel) {\r\n      item.checked = !item.checked;\r\n\r\n      localStorage.setItem('todo', JSON.stringify(todoList));\r\n    }\r\n  })\r\n})\r\n\r\n// important task\r\ntodoTask.addEventListener('contextmenu', (event) => {\r\n  event.preventDefault();\r\n  todoList.forEach((item, index) => {\r\n    if(item.todo === event.target.innerHTML) {\r\n      // delete task by \"right click mouse + CTRL\" \r\n      if (event.ctrlKey || event.metaKey) {\r\n        todoList.splice(index, 1)\r\n      } else {\r\n        item.important = !item.important;\r\n      }\r\n\r\n      renderMessages();\r\n      localStorage.setItem('todo', JSON.stringify(todoList));\r\n    }\r\n  })\r\n});\r\n"],"names":["addMessage","document","querySelector","addBtn","todoTask","todoList","renderMessages","renderMessage","length","innerHTML","forEach","item","index","checked","important","todo","localStorage","getItem","JSON","parse","addEventListener","value","newTodo","id","push","setItem","stringify","event","idInput","target","getAttribute","valueLabel","preventDefault","ctrlKey","metaKey","splice"],"version":3,"file":"todo.e3f6428d.js.map"}