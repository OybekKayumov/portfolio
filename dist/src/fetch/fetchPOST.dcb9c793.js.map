{"mappings":"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","sources":["src/fetch/fetchPOST.js"],"sourcesContent":["// 1 simple Fetch\r\n// fetch request is really simple\r\n// const url = 'https://us-central1-js-capstone-backend.cloudfunctions.net/api/'\r\n\r\n// const getFetch = document.querySelector('.getFetch');\r\n\r\n// const url = 'https://jsonplaceholder.typicode.com/todos/1'\r\n\r\n// fetch (url)\r\n//   .then(response => response.json())\r\n//   // .then(data => console.log('data: ', data))\r\n//   .then(data => {\r\n    \r\n//     console.log('data: ', data)\r\n//     getFetch.innerHTML = `\r\n//            <p>Name: ${data.title}</p>\r\n//            <p>ID: ${data.id}</p>\r\n//            <p>Completed: ${data.completed}</p>    \r\n//        `\r\n//   })\r\n\r\n\r\n\r\n// 2 full Fetch\r\n\r\n// async function postData(url= '', data ={} ) {\r\n  \r\n  //! Default options are marked with *\r\n  // const response = await fetch(url, {\r\n    // method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n    // mode: 'cors', // no-cors, *cors, same-origin\r\n    // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n    // credentials: 'same-origin', // include, *same-origin, omit\r\n    // headers: {\r\n      // 'Content-type': 'application/json'\r\n      //'Content-type': 'application/x-www-form-urlencoded'\r\n    // },\r\n    // redirect: 'follow', // manual, *follow, error\r\n    // referrerPolicy: 'no-referrer', // no-refferer, *no-refferer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url \r\n    // body: JSON.stringify(data) // body data type must match \"Content-type\" header\r\n  // })\r\n\r\n  // return response.json(); //parses JSON response into native JavaScript objects\r\n\r\n// }\r\n\r\n\r\n//todo  3 : POST works.\r\nconst postFetch = document.querySelector('.postFetch');\r\nconst input = document.querySelector('.input');\r\nconst sendBtn = document.querySelector('.btn');\r\n\r\n\r\nfetch('https://jsonplaceholder.typicode.com/posts', {\r\n  method: 'POST',\r\n  body: JSON.stringify({\r\n    title: 'Cline Walter',\r\n    body: '48, Street, City, Country',\r\n    userId: 789,\r\n  }),\r\n  headers: {\r\n    'Content-type': 'application/json'\r\n  },\r\n  })\r\n    .then((res) => res.json()) //? \r\n    .then((data) => {\r\n       console.log('data: ', data)\r\n    \r\n       postFetch.innerHTML = `\r\n          <p>Post data:</p>\r\n          <p>Name: ${data.title}</p>\r\n          <p>About: ${data.body}</p>\r\n          <p>userID: ${data.userId}</p>\r\n          <p>ID: ${data.id}</p>\r\n\r\n   `\r\n  });\r\n\r\n// sendBtn.addEventListener ('click', postData)\r\n\r\n  //todo 4  PUT\r\n  \r\n  // const putFetch = document.querySelector('.putFetch');\r\n\r\n  // fetch('https://jsonplaceholder.typicode.com/posts/2', {\r\n  //   method: 'PUT',\r\n  //   body: JSON.stringify({\r\n  //     id: 1,\r\n  //     title: 'Bob Houston',\r\n  //     body: 'lion',\r\n  //     userId: 567,\r\n  //   }),\r\n  //   headers: {\r\n  //     'Content-type': 'application/json; charset=UTF-8',\r\n  //   },\r\n  // })\r\n  //   .then(res => res.json())\r\n  //   .then(data => {\r\n  //     console.log('data: ', data)\r\n    \r\n  //     putFetch.innerHTML = `\r\n  //        <p>Put data:</p>\r\n  //        <p>Name: ${data.title}</p>\r\n  //        <p>About: ${data.body}</p>\r\n  //        <p>userID: ${data.userId}</p>\r\n  //        <p>ID: ${data.id}</p>\r\n\r\n  // `\r\n  //   })\r\n\r\n//todo 5  with function \r\n\r\n\r\n\r\n\r\n  "],"names":["postFetch","document","querySelector","input","sendBtn","fetch","method","body","JSON","stringify","title","userId","headers","then","res","json","data","console","log","innerHTML","id"],"version":3,"file":"fetchPOST.dcb9c793.js.map","sourceRoot":"/__parcel_source_root/"}