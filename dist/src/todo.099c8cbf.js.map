{"mappings":"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","sources":["src/todo.js"],"sourcesContent":["const addMessage = document.querySelector('.message');\r\nconst addBtn = document.querySelector('.add');\r\n//list of tasks\r\nconst todoTask = document.querySelector('.todo');\r\n\r\nlet todoList = [];\r\n// check localStorage for data\r\nif (localStorage.getItem('todo')) {\r\n  // if in localStorage we have some data, \r\n  todoList = JSON.parse(localStorage.getItem('todo'));\r\n  // render data from LocalStorage to HTML\r\n  renderMessages();\r\n} else {\r\n  todoList = [];\r\n}\r\n\r\naddBtn.addEventListener('click', () => {\r\n  // if input is empty, we cannot add a task\r\n  if (!addMessage.value) {\r\n    // alert(\"Enter a new task\")\r\n    return;\r\n  }  \r\n  // every task to OBJECT\r\n  // every OBJECT to Array => todoList\r\n  // create new array \r\n  let newTodo = {\r\n    todo: addMessage.value,\r\n    checked: false,\r\n    important: false,\r\n    id: 0\r\n  }\r\n\r\n  todoList.push(newTodo);\r\n  \r\n  // console.log('value from input \"addMessage\": ', addMessage.value);\r\n  // console.log('newTodo Object\": ', newTodo);\r\n  // console.log('TodoList Array\": ', todoList);\r\n  // call every time when we click on Add button\r\n  renderMessages()\r\n  // localStorage gets string\r\n  localStorage.setItem('todo', JSON.stringify(todoList));\r\n  addMessage.value = '';\r\n})\r\n\r\nfunction renderMessages() { \r\n  let renderMessage = '';\r\n  if (todoList.length === 0) todoTask.innerHTML = '';\r\n  todoList.forEach((item, index) => {\r\n    // console.log('render items', item);\r\n    // const renderMessage = `Our task is: ${addMessage.value}`;\r\n    // console.log('renderMessage: ', renderMessage);\r\n    \r\n\r\n    // checked task or not\r\n    // item.checked ? 1 : 2\r\n    // if true do 1, if false do 2\r\n    // if checked is true we add \"checked, if false \"\" empty\r\n    renderMessage += `\r\n        <li>\r\n          <input type=\"checkbox\" id=\"item_${index}\" ${item.checked ? 'checked' : ''}>\r\n          <label for=\"item_${index}\" class=\"${item.important ? 'important' : ''}\">${item.todo}</label>\r\n        </li>    \r\n    `;\r\n    \r\n    todoTask.innerHTML = renderMessage; \r\n  })\r\n}\r\n\r\n// see and update for task status 'checked'\r\n// if checked, save to LocalStorage\r\n// we can find 'checked' by input\r\n// our task list \r\ntodoTask.addEventListener('change', (event) => {\r\n  // see on consol which task we pressed\r\n  // console.log(event.target); \r\n  // take attribute ID for this target\r\n  // console.log(event.target.getAttribute('id'));\r\n  \r\n  let idInput  = event.target.getAttribute('id');\r\n  let forLabel = todoTask.querySelector('[for=' + idInput + ']');\r\n  let valueLabel = forLabel.innerHTML;\r\n\r\n  // item number\r\n  // console.log('forlabel: ', forLabel);\r\n  // value label = text (task 1)\r\n  // console.log('valuelabel: ', valueLabel);\r\n\r\n  todoList.forEach((item) => {\r\n    if (item.todo === valueLabel) {\r\n      item.checked = !item.checked;\r\n\r\n      localStorage.setItem('todo', JSON.stringify(todoList));\r\n    }\r\n  })\r\n})\r\n\r\n// important task\r\ntodoTask.addEventListener('contextmenu', (event) => {\r\n  event.preventDefault();\r\n  todoList.forEach((item, index) => {\r\n    if(item.todo === event.target.innerHTML) {\r\n      // delete task by \"right click mouse + CTRL\" \r\n      if (event.ctrlKey || event.metaKey) {\r\n        todoList.splice(index, 1)\r\n      } else {\r\n        item.important = !item.important;\r\n      }\r\n\r\n      renderMessages();\r\n      localStorage.setItem('todo', JSON.stringify(todoList));\r\n    }\r\n  })\r\n});\r\n"],"names":["addMessage","document","querySelector","addBtn","todoTask","todoList","localStorage","getItem","JSON","parse","renderMessages","addEventListener","value","newTodo","todo","checked","important","id","push","setItem","stringify","renderMessage","length","innerHTML","forEach","item","index","event","idInput","target","getAttribute","forLabel","valueLabel","preventDefault","ctrlKey","metaKey","splice"],"version":3,"file":"todo.099c8cbf.js.map","sourceRoot":"/__parcel_source_root/"}